diff --git a/node_modules/rollup-plugin-svelte-svg/index.js b/node_modules/rollup-plugin-svelte-svg/index.js
index 22de0a7..78d361e 100644
--- a/node_modules/rollup-plugin-svelte-svg/index.js
+++ b/node_modules/rollup-plugin-svelte-svg/index.js
@@ -7,12 +7,15 @@ const { createFilter } = require("rollup-pluginutils");
 const svgRegex = /(<svg.*?)(>.*)/s;
 const svgheader = /^\<\?xml.+?\>/;
 
+const prequel = '<script>export let svg = null;</script>';
+let isBuild = false;
+
 function addProps(source) {
 	const parts = svgRegex.exec(source);
 	if (!parts) throw new Error("Unable to parse as svg.");
 
 	const [, svgStart, svgBody] = parts;
-	return `${svgStart} {...$$props} ${svgBody}`;
+	return `${prequel}${svgStart} bind:this={svg} {...$$restProps} ${svgBody}`;
 }
 
 exports.svelteSVG = function svelteSVG(options = {}) {
@@ -26,6 +29,10 @@ exports.svelteSVG = function svelteSVG(options = {}) {
 		// https://vitejs.dev/guide/api-plugin.html#plugin-ordering
 		...(enforce && { enforce }),
 
+		configResolved(resolvedConfig) {
+			isBuild = resolvedConfig.command !== 'serve';
+		},
+
 		resolveId(source, importer) {
 			if (!filter(source) || extname(source) !== ".svg") return null;
 
@@ -35,7 +42,7 @@ exports.svelteSVG = function svelteSVG(options = {}) {
 		load(id) {
 			if (!id.endsWith(".svg.svelte")) return null;
 
-			return readFile(id.slice(0, -".svelte".length), "utf-8")
+			return readFile(id.slice(isBuild ? 0 : 1, -".svelte".length), "utf-8")
 				.then(file => (svgo ? optimise(file, svgo).data : file))
 				.then(file => file.replace(svgheader, "").trim())
 				.then(addProps);
